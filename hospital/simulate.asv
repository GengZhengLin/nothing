function simulate()
global Z;
for k=2:Z
    update_s(k);
    update_e(k);
    update_i1(k);
    update_i2(k);
    update_I1(k);
    update_I2(k);
    update_O(k);
    update_D(k);
    update_mu1_new(k);
    update_T1_new(k);
end
%disp(mu1_new)
end

function update_s(k)
global s i1 i2 V lamda1 lamda2 lamda3 pc N D;
k=k-1;
s(:,k+1)=s(:,k)-(lamda1*i1(:,k)+lamda2*i2(:,k)+lamda3*D(:,k)).*s(:,k)-pc*V(:,k)./N;
end

function update_e(k)
global e s i1 i2 lamda1 lamda2 lamda3 D alpha;
k=k-1;
e(:,k+1)=e(:,k)+(lamda1*i1(:,k)+lamda2*i2(:,k)+lamda3*D(:,k)).*s(:,k)-alpha*e(k);
end

function update_i1(k)
global i1 alpha e T0 u1;
k=k-1;
i1(:,k+1)=i1(:,k)+alpha*e(k)-T0*u1*i1(k)-(1-u1)*i1(k);
end

function update_i2(k)
global i1 i2 fi T0 u1 u2;
k=k-1;
i2(:,k+1)=i2(:,k)+T0*u1*i1(:,k)-fi*u2*i2(:,k)-(1-u2)*i2(:,k);
end

function update_I1(k)
global I1 T1 i1 T1_new mu1_new;
k=k-1;
I1(:,k+1)=I1(:,k)+T1*I1(:,k)+(1-u1)*i1(:,k)-(T1_new(:,k)+mu1_new(:,k)).*I1(:,k);
end

function update_I2(k)
global I1 I2 T1_new u1 i2 mu2 kesai;
k=k-1;
I2(:,k+1)=I2(:,k)+T1_new(:,k).*I1(:,k)+(1-u1)*i2(:,k)-mu2*I2(:,k)-kesai*I2(:,k);
end

function update_O(k)
global O I1 mu1_new I2 mu2_new b;
k=k-1;
O(:,k+1)=O(:,k)+I1(:,k).*mu1_new(k)+I2(:,k).*mu2_new(:,k)-b*O(:,k);
end

function update_D(k)
global i2 D fi u2 F;
k=k-1;
D(:,k+1)=D(:,k)+fi*u2*i2(:,k)-D(:,k)*F;
end

function update_mu1_new(k)
global I1 mu1_new T M N;
global mu1 T1 nm;
k=k-1;
if k<=T
    mu1_new(:,k+1)=mu1;
else
    mu1_new(:,k+1)=mu1-M(:,k)./(N.*I1(:,k))*mu1+M(:,k)./(N.*I1(:,k))*nm;
end
end

function update_T1_new(k)
global I1 T1_new M T N;
global mu1 T1 nm yita;
k=k-1;
if k<=T
    T1_new(:,k+1)=T1;
else
    T1_new(:,k+1)=T1-M(:,k)./(N.*I1(:,k))*T1+M(:,k)./(N.*i1(:,k))*nm*yita;
end
end
